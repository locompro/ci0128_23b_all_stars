@page
@model Locompro.Pages.SearchResults.SearchResultsModel
@{
    
}

<link rel="stylesheet" href="~/css/MainMenu.css" asp-append-version="true" />

<div class="container  pt-5"
     style="padding-left: 0px;margin-bottom: 3px;margin-top: -52px;">
    <div class="container">
        <form method="get">
        <div class="justify-content-center form-actions input-group" style="max-width: 1250px; margin: 0 auto;">
            
            <div class="input-group-prepend justify-content-center"
                 style="position: absolute; left: 0; top: 0; bottom: 0; display: flex; align-items: center; margin-right: 6px;">
                <button class="btn btn-primary ps-2 pe-2 rounded-pill"
                        role="button"
                        type="submit"
                        formaction="/SearchResults/SearchResults"
                        style="margin-left: 20px; height: 30px; font-size: 12px;">
                    <i class="fa fa-search"></i>
                </button>
            </div>
            <div class="search-box form-control pe-4 rounded-pill"
                 style="margin-left: 10px;">
                <input type="text"
                       value="@Model.productName"
                       class="form-control rounded-pill"
                       name="query"
                       placeholder="Buscar...."
                       style="margin-left: 30px; padding-right: 50px; border: none; width: 98%;"
                       id="searchBox">
            </div>
            
            <button class="btn btn-primary ps-4 pe-4 rounded-pill"
                    style="margin-left: 10px; margin-bottom: 0px; "
                    id="advancedSearchButton"
                    onclick="advancedSearchButtonPressed()"
                    type="button">
                Búsqueda avanzada
            </button>
        </div>
        </form>
        <div id="modalContainer" class="justify-content-center">
        </div>

        <div class="card border" style="margin-top: 15px;padding-top: 0px;padding-bottom: 0px;border-radius: 20px;" border="5px solid black;">
            <div style="margin-left: 20px; margin-top: 15px">
                <h2>@Model.productName</h2>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Ultimo Aporte</th>
                            <th scope="col">Producto</th>
                            <th scope="col">Precio</th>
                            <th scope="col">Tienda</th>
                            <th scope="col">Provincia</th>
                            <th scope="col">Canton</th>
                            <th scope="col">Descripcion</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            PaginatedList<ItemDisplayInfo> items = Model.displayItems;
                            foreach (ItemDisplayInfo item in Model.displayItems)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.lastSubmissionDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.productName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.productPrice)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.productStore)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.provinceLocation)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.cantonLocation)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.productDescription)
                                    </td>
                                </tr>
                            }
                        } 
                    </tbody>
                </table>

                @{
                    var prevDisabled = !Model.displayItems.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.displayItems.HasNextPage ? "disabled" : "";
                }

                <div style="margin-bottom: 20px">
                    <a asp-page=""
                       asp-route-query=@Model.productName
                       asp-route-province=@Model.provinceSelected
                       asp-route-canton=@Model.cantonSelected
                       asp-route-minValue=@Model.minPrice
                       asp-route-maxValue=@Model.maxPrice
                       asp-route-category=@Model.categorySelected
                       asp-route-model=@Model.modelSelected
                       asp-route-pageIndex="@(Model.displayItems.PageIndex - 1)"
                       class="btn btn-primary @prevDisabled">
                        Previous
                    </a>
                    <a asp-page=""
                       asp-route-query=@Model.productName
                       asp-route-province=@Model.provinceSelected
                       asp-route-canton=@Model.cantonSelected
                       asp-route-minValue=@Model.minPrice
                       asp-route-maxValue=@Model.maxPrice
                       asp-route-category=@Model.categorySelected
                       asp-route-model=@Model.modelSelected
                       asp-route-pageIndex="@(Model.displayItems.PageIndex + 1)"
                       class="btn btn-primary @nextDisabled">
                        Next
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var modalShown = false;

        async function advancedSearchButtonPressed() {
            var button = document.getElementById("advancedSearchButton");

            // if the modal is currently been shown, close it
            if (modalShown == true) {
                // get the modal
                var modal = document.getElementById("modalContainer");
                // erase the contents
                modal.innerHTML = "";

                // change state to modal not shown
                modalShown = false;
                return;
            }

            try {
                const response = await fetch("SearchResults?handler=AdvancedSearch");
                if (response.ok) {
                    const modalContent = await response.text();

                    // Append the modal content to the modal container
                    const modalContainer = document.getElementById("modalContainer");
                    modalContainer.innerHTML = modalContent;
                } else {
                    console.error('Failed to load modal content.');
                }
            } catch (error) {
                console.error('An error occurred:', error);
            }

            modalShown = true;

        }
    </script>

    <script>
        // activated when province is changed in the dropdown menu
        async function loadProvince(optionSelected) {
            var content = optionSelected.value;

            try {
                // send server side the province selected by client and wait for response
                const response = await fetch("SearchResults?handler=UpdateProvince&province=" + content, {
                    method: 'GET', // use get method
                    headers: {
                        'Accept': 'application/json', // acepting json files
                    },
                });

                if (response.ok) {
                    console.log("ok");
                    // get the cantons that were sent
                    loadCantons(response);
                } else {
                    console.log("not ok");
                }
            } catch (error) {
                console.log("Error");
            }
        }

        // get the cantons sent by the server side
        async function loadCantons(response) {
            try {
                // wait for cantons json file to be received
                const data = await response.json();

                // Clear existing options in the optgroup
                const optgroup = document.getElementById('cantonDropdown');
                optgroup.innerHTML = '';

                // Populate with new options based on fetched data
                data.forEach(function (canton) {
                    const option = document.createElement('option');
                    option.textContent = canton.Name;
                    optgroup.appendChild(option);
                });
            } catch (error) {
                console.error('Error loading cantons:', error);
            }
        }
    </script>

    <script>
        function performSearchButton() {
            console.log("clicked")

            var provinceValue = document.getElementById("provinceDropdown").value;
            var cantonValue = document.getElementById("cantonDropdown").value;
            var minValue = document.getElementById("minValue").value;
            var maxValue = document.getElementById("maxValue").value;
            var categoryValue = document.getElementById("categoryDropdown").value;
            var searchValue = document.getElementById("searchBox").value;
            var modelValue = "";
            try {
                var modelValue = document.getElementById("modelInput").value;
            } catch (error) {
            }

            // redirect to search results page
            window.location.href = "/SearchResults/SearchResults?query=" + searchValue +
                "&province=" + provinceValue +
                "&canton=" + cantonValue +
                "&minValue=" + minValue +
                "&maxValue=" + maxValue +
                "&category=" + categoryValue +
                "&model=" + modelValue;
        }
    </script>
}